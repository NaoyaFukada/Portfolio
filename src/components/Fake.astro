---
import SectionHeader from "./common/SectionHeader.astro";

interface WorkExperience {
    company: string;
    position: string;
    period: string;
    startDate: string; // For sorting
    location: string;
    description: string;
    achievements: string[];
    technologies: string[];
    type: string; // "fulltime", "parttime", "internship", "contract"
}

const experiences: WorkExperience[] = [
    {
        company: "Tech Solutions Inc.",
        position: "Junior Software Engineer",
        period: "Jan 2024 - Present",
        startDate: "2024-01",
        location: "Sydney, Australia",
        description: "Developed and maintained web applications using modern JavaScript frameworks. Collaborated with cross-functional teams to deliver high-quality software solutions.",
        achievements: [
            "Improved app performance by 40%",
            "Built 5+ production features",
            "Mentored 2 junior developers",
            "Reduced bug reports by 30%"
        ],
        technologies: ["React", "TypeScript", "Node.js", "PostgreSQL"],
        type: "fulltime"
    },
    {
        company: "Digital Agency Co.",
        position: "Web Developer Intern",
        period: "Jun 2023 - Dec 2023",
        startDate: "2023-06",
        location: "Sydney, Australia",
        description: "Assisted in building responsive websites for clients. Gained hands-on experience with modern web development tools and practices.",
        achievements: [
            "Delivered 3 client projects",
            "Optimized website speed",
            "Created reusable components",
            "Improved SEO rankings"
        ],
        technologies: ["HTML", "CSS", "JavaScript", "WordPress"],
        type: "internship"
    },
    {
        company: "StartupXYZ",
        position: "Frontend Developer",
        period: "Mar 2023 - May 2023",
        startDate: "2023-03",
        location: "Remote",
        description: "Contributed to building a SaaS product from the ground up. Focused on creating intuitive user interfaces and ensuring responsive design across devices.",
        achievements: [
            "Built responsive UI components",
            "Implemented user authentication",
            "Reduced load time by 50%",
            "Integrated third-party APIs"
        ],
        technologies: ["Vue.js", "Tailwind", "Firebase", "REST API"],
        type: "contract"
    },
    {
        company: "Retail Solutions Ltd.",
        position: "IT Support Specialist",
        period: "Jan 2022 - Feb 2023",
        startDate: "2022-01",
        location: "Sydney, Australia",
        description: "Provided technical support and maintained IT infrastructure. Automated routine tasks using Python scripts to improve efficiency.",
        achievements: [
            "Automated daily tasks",
            "Resolved 200+ support tickets",
            "Maintained 99% uptime",
            "Trained 10+ staff members"
        ],
        technologies: ["Python", "PowerShell", "SQL", "Linux"],
        type: "parttime"
    },
];

// Sort by start date (most recent first)
const sortedExperiences = experiences.sort((a, b) => b.startDate.localeCompare(a.startDate));
---

<section id="experience" class="work">
    <SectionHeader 
        mainText="Work" 
        highlightText="Experience" 
        highlightClass="text-purple-400" 
        underlineClass="bg-purple-400"
        subtitle="My journey into software development"
    />

    <!-- Filter Tabs -->
    <div class="filter-tabs">
        <button class="filter-tab active" data-filter="all">
            <span class="text-lg">üíº</span>
            All Roles
        </button>
        <button class="filter-tab" data-filter="fulltime">
            <span class="text-lg">üè¢</span>
            Full-time
        </button>
        <button class="filter-tab" data-filter="internship">
            <span class="text-lg">üéì</span>
            Internship
        </button>
        <button class="filter-tab" data-filter="contract">
            <span class="text-lg">üìù</span>
            Contract
        </button>
        <button class="filter-tab" data-filter="parttime">
            <span class="text-lg">‚è∞</span>
            Part-time
        </button>
    </div>

    <!-- Timeline Container -->
    <div class="timeline-container">
        {sortedExperiences.map((exp, index) => (
            <div class="timeline-item" data-category={exp.type}>
                <!-- Timeline Line and Dot -->
                <div class="timeline-marker">
                    <div class="timeline-dot"></div>
                    {index < sortedExperiences.length - 1 && (
                        <div class="timeline-line"></div>
                    )}
                </div>

                <!-- Content Card -->
                <div class="timeline-content">
                    <div class="content-header">
                        <div class="header-top">
                            <h3 class="position-title">{exp.position}</h3>
                            <span class="period-badge">{exp.period}</span>
                        </div>
                        <div class="company-info">
                            <span class="company-name">
                                <i class="fa-solid fa-building"></i>
                                {exp.company}
                            </span>
                            <span class="location">
                                <i class="fa-solid fa-location-dot"></i>
                                {exp.location}
                            </span>
                        </div>
                    </div>

                    <p class="work-description">{exp.description}</p>

                    <div class="achievements-section">
                        <h4 class="achievements-title">Key Achievements:</h4>
                        <ul class="achievements-list">
                            {exp.achievements.map((achievement) => (
                                <li class="achievement-item">
                                    <span class="achievement-bullet">‚ñ∏</span>
                                    {achievement}
                                </li>
                            ))}
                        </ul>
                    </div>

                    <div class="tech-list">
                        {exp.technologies.map((tech) => (
                            <span class="tech-item">{tech}</span>
                        ))}
                    </div>
                </div>
            </div>
        ))}
    </div>
</section>

<style>
    @reference "tailwindcss";

    .work {
        @apply max-w-7xl mx-auto px-6 my-20 md:my-40 scroll-mt-20 z-1;
    }

    /* Filter Tabs */
    .filter-tabs {
        @apply flex flex-wrap justify-center gap-2 sm:gap-3 mb-12 px-2;
    }

    .filter-tab {
        @apply px-3 sm:px-4 py-2 rounded-lg border transition-all duration-300
            flex items-center gap-1.5 sm:gap-2 text-xs sm:text-sm font-medium
            focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-purple-400;
        background: rgba(15, 23, 42, 0.6);
        border-color: rgba(71, 85, 105, 0.5);
        color: #94a3b8;
    }

    .filter-tab:hover {
        border-color: #64748b;
        color: #e2e8f0;
        transform: translateY(-2px);
    }

    .filter-tab.active {
        background: linear-gradient(135deg, rgba(168, 85, 247, 0.15) 0%, rgba(192, 132, 252, 0.15) 100%);
        border-color: #a855f7;
        color: #a855f7;
        box-shadow: 0 0 20px rgba(168, 85, 247, 0.2);
    }

    /* Timeline Container */
    .timeline-container {
        @apply max-w-4xl mx-auto;
    }

    .timeline-item {
        @apply relative grid grid-cols-[auto_1fr] gap-6 md:gap-8 mb-12 last:mb-0
               transition-all duration-500;
        opacity: 0;
        transform: translateY(30px);
        animation: fadeInUp 0.6s ease-out forwards;
    }

    .timeline-item:nth-child(1) { animation-delay: 0.1s; }
    .timeline-item:nth-child(2) { animation-delay: 0.2s; }
    .timeline-item:nth-child(3) { animation-delay: 0.3s; }
    .timeline-item:nth-child(4) { animation-delay: 0.4s; }
    .timeline-item:nth-child(5) { animation-delay: 0.5s; }

    @keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .timeline-item.hidden {
        @apply opacity-0 scale-95 pointer-events-none;
        height: 0;
        margin: 0;
        overflow: hidden;
    }

    /* Timeline Marker (Line + Dot) */
    .timeline-marker {
        @apply relative flex flex-col items-center pt-2;
        width: 40px;
    }

    .timeline-dot {
        @apply relative rounded-full flex-shrink-0 transition-all duration-300;
        width: 20px;
        height: 20px;
        background: linear-gradient(135deg, #a855f7 0%, #c084fc 100%);
        box-shadow: 
            0 0 0 4px rgba(168, 85, 247, 0.2),
            0 0 20px rgba(168, 85, 247, 0.4);
        z-index: 2;
    }

    .timeline-dot::before {
        content: '';
        @apply absolute inset-0 rounded-full;
        background: linear-gradient(135deg, #a855f7 0%, #c084fc 100%);
        animation: pulse 2s ease-in-out infinite;
    }

    @keyframes pulse {
        0%, 100% {
            transform: scale(1);
            opacity: 1;
        }
        50% {
            transform: scale(1.3);
            opacity: 0;
        }
    }

    .timeline-item:hover .timeline-dot {
        box-shadow: 
            0 0 0 6px rgba(168, 85, 247, 0.3),
            0 0 30px rgba(168, 85, 247, 0.6);
        transform: scale(1.2);
    }

    .timeline-line {
        @apply w-0.5 flex-1 mt-2;
        background: linear-gradient(
            180deg,
            rgba(168, 85, 247, 0.6) 0%,
            rgba(168, 85, 247, 0.3) 50%,
            rgba(168, 85, 247, 0.1) 100%
        );
        min-height: 60px;
    }

    /* Content Card */
    .timeline-content {
        @apply rounded-xl p-6 transition-all duration-300;
        background: linear-gradient(145deg, #1e293b 0%, #0f172a 100%);
        border: 1px solid #334155;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.2);
    }

    .timeline-item:hover .timeline-content {
        border-color: rgba(168, 85, 247, 0.5);
        box-shadow: 
            0 10px 30px -5px rgba(0, 0, 0, 0.3),
            0 0 20px rgba(168, 85, 247, 0.2);
        transform: translateX(8px);
    }

    .content-header {
        @apply mb-4 pb-4 border-b border-slate-700;
    }

    .header-top {
        @apply flex flex-wrap items-start justify-between gap-3 mb-3;
    }

    .position-title {
        @apply text-xl md:text-2xl font-bold text-white;
    }

    .period-badge {
        @apply text-xs md:text-sm text-purple-300 px-3 py-1 rounded-full whitespace-nowrap;
        background: rgba(168, 85, 247, 0.1);
        border: 1px solid rgba(168, 85, 247, 0.3);
    }

    .company-info {
        @apply flex flex-wrap gap-4 text-sm text-slate-400;
    }

    .company-name,
    .location {
        @apply flex items-center gap-2;
    }

    .company-name {
        @apply text-purple-300 font-semibold;
    }

    .company-name i {
        @apply text-purple-400;
    }

    .work-description {
        @apply text-slate-300 text-sm md:text-base leading-relaxed mb-4;
    }

    /* Achievements */
    .achievements-section {
        @apply mb-4;
    }

    .achievements-title {
        @apply text-sm font-semibold text-purple-300 mb-2;
    }

    .achievements-list {
        @apply space-y-2 ml-2;
    }

    .achievement-item {
        @apply flex items-start gap-2 text-sm text-slate-300;
        list-style: none;
    }

    .achievement-bullet {
        @apply text-purple-400 font-bold flex-shrink-0;
    }

    /* Technologies */
    .tech-list {
        @apply flex flex-wrap gap-2 pt-4 border-t border-slate-700;
    }

    .tech-item {
        @apply text-xs text-cyan-300 font-mono px-2 py-1 rounded;
        background: rgba(6, 182, 212, 0.1);
        border: 1px solid rgba(6, 182, 212, 0.2);
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
        .timeline-marker {
            width: 30px;
        }

        .timeline-dot {
            width: 16px;
            height: 16px;
        }

        .timeline-item:hover .timeline-content {
            transform: translateX(4px);
        }
    }
</style>