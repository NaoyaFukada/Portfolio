<!-- This is for terminal contents in Home.astro -->
---

interface Props {
    keyName: string;
    items: string[];
}

const {keyName, items=[]} = Astro.props;

const groupedItems: string[][] = [];
for (let i = 0; i < items.length; i += 3) {
    groupedItems.push(items.slice(i, i + 3));
}

---

<div class="json-line indent-1">
    <span class="json-key">"{keyName}"</span><span class="json-colon">:</span>
    <span class="json-bracket">[</span>
</div>

{groupedItems.map((group, groupIndex) => (
    <div class="json-line indent-2">
        {group.map((item, itemIndex) => (
            <>
            <span class="json-string">"{item}"</span>{!(groupIndex === groupedItems.length -1 && itemIndex === group.length -1) && (
                <span class="json-comma">,</span>
            )} 
            </>
        ))}
    </div>
))}

<div class="json-line indent-1">
  <span class="json-bracket">]</span><span class="json-comma">,</span>
</div>



<style>
  @reference "tailwindcss";

  .json-line {
    @apply transition-all duration-500;
    opacity: 0;
    transform: translateX(-10px);
  }

  .indent-1 { @apply ml-4;}
  .indent-2 {@apply ml-8;}
  
  .json-key { @apply text-cyan-300; }
  .json-string { @apply text-orange-300; }
  .json-number { @apply text-rose-400; }
  .json-boolean { @apply text-emerald-400; }
  .json-bracket { @apply text-yellow-400; }
  .json-colon { @apply text-slate-400; }
  .json-comma { @apply text-slate-500; }
</style>
