---
// Add useState for menu toggle
let isMenuOpen = false;
---

<nav class="flex flex-wrap justify-center bg-sky-950">
  <!-- Desktop Version -->
  <div class="hidden md:flex md:flex-wrap md:justify-center md:gap-8 md:py-8">
    <a href="#home" class="desktop-link home">Home</a>
    <a href="#about" class="desktop-link about">About</a>
    <a href="#projects" class="desktop-link projects">Projects</a>
    <a href="#experience" class="desktop-link work">Work</a>
    <a href="#education" class="desktop-link education">Education</a>
    <a href="#contact" class="desktop-link contact">Contact</a>
  </div>

  <!-- Mobile Navigation -->
  <div class="md:hidden">
    <!-- Hamburger Button -->
    <button
      id="menu-toggle"
      class="fixed top-6 right-6 z-50 p-2 text-white"
      aria-label="Toggle Menu"
    >
      <div class="w-6 h-[2px] bg-white mb-1.5 transition-all duration-300"></div>
      <div class="w-6 h-[2px] bg-white mb-1.5 transition-all duration-300"></div>
      <div class="w-6 h-[2px] bg-white transition-all duration-300"></div>
    </button>

    <!-- Mobile Menu Overlay -->
    <div
      id="mobile-menu"
      class="fixed inset-0 bg-slate-900/95 -translate-y-full transition-transform duration-300 ease-in-out z-40"
    >
      <div class="flex flex-col items-center justify-center h-full gap-8">
        <a href="#home" class="mobile-link">Home</a>
        <a href="#about" class="mobile-link">About</a>
        <a href="#projects" class="mobile-link">Projects</a>
        <a href="#work" class="mobile-link">Work</a>
        <a href="#education" class="mobile-link">Education</a>
        <a href="#contact" class="mobile-link">Contact</a>
      </div>
    </div>
</nav>

<style>
@reference "tailwindcss";

  /* Base styles for all menu links for desktop */
  .desktop-link {
    @apply relative text-lg text-white tracking-wider
          after:absolute after:bottom-0 after:left-1/2 after:-translate-x-1/2
          after:h-[2px] after:w-0 after:rounded-full
          after:transition-all after:duration-500 after:ease-in-out
          hover:after:w-full
          transition-all duration-300
          hover:scale-125 hover:-translate-y-1
          focus-visible:outline-none 
          focus-visible:ring-2 focus-visible:ring-offset-2 
          focus-visible:ring-offset-sky-950
          focus-visible:scale-110 focus-visible:-translate-y-0.5;
  }

  /* Individual color configurations for desktop */
  .desktop-link.home {
    @apply after:bg-sky-400 hover:text-sky-300 hover:-rotate-[3deg]
          focus-visible:ring-sky-400/60
          focus-visible:shadow-[0_0_15px_rgba(56,189,248,0.3)];
  }
  .desktop-link.about {
    @apply after:bg-rose-400 hover:text-rose-300 hover:-rotate-[-3deg]
          focus-visible:ring-rose-400/60
          focus-visible:shadow-[0_0_15px_rgba(244,63,94,0.3)];
  }
  .desktop-link.projects {
    @apply after:bg-emerald-400 hover:text-emerald-300 hover:-rotate-[6deg]
          focus-visible:ring-emerald-400/60
          focus-visible:shadow-[0_0_15px_rgba(52,211,153,0.3)];
  }
  .desktop-link.work {
    @apply after:bg-purple-400 hover:text-purple-300 hover:-rotate-[-6deg]
          focus-visible:ring-purple-400/60
          focus-visible:shadow-[0_0_15px_rgba(192,132,252,0.3)];
  }
  .desktop-link.education {
    @apply after:bg-amber-400 hover:text-amber-300 hover:-rotate-[6deg]
          focus-visible:ring-amber-400/60
          focus-visible:shadow-[0_0_15px_rgba(251,191,36,0.3)];
  }
  .desktop-link.contact {
    @apply after:bg-indigo-400 hover:text-indigo-300 hover:-rotate-[-2deg]
          focus-visible:ring-indigo-400/60
          focus-visible:shadow-[0_0_15px_rgba(129,140,248,0.3)];
  }

  /* Base styles for all menu links for mobile */
  .mobile-link {
      @apply text-white text-xl tracking-wider py-3
            relative select-none
            transition-[transform,background-color] duration-75
            active:scale-[0.97] active:bg-white/20
            active:shadow-inner;

      touch-action: manipulation;

      /* Cross-browser touch event handling */
      -webkit-tap-highlight-color: transparent;
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      user-select: none;
  }

  /* iOS specific handling */
  @supports (-webkit-touch-callout: none) {
      .mobile-link {
          @apply active:duration-150;
          -webkit-tap-highlight-color: rgba(255,255,255,0.15);
      }
  }

  /* Android/Chrome specific */
  @media (hover: none) and (pointer: coarse) {
      .mobile-link:active {
          transition-duration: 150ms;
      }
  }


</style>

<script>
  const menuToggle = document.getElementById('menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuLinks = document.querySelectorAll('#mobile-menu a');
  const html = document.documentElement;
  let isMenuOpen = false;

  function openMenu() {
    isMenuOpen = true;
    menuToggle?.setAttribute('aria-expanded', 'true');
    html.classList.add('overflow-hidden');

    const bars = menuToggle?.children;
    if (!bars) return;

    bars[0].classList.add('rotate-45', 'translate-y-1.5');
    bars[1].classList.add('opacity-0');
    bars[2].classList.add('-rotate-45', '-translate-y-1.5');
    mobileMenu?.classList.remove('-translate-y-full');
  }

  function closeMenu() {
    isMenuOpen = false;
    menuToggle?.setAttribute('aria-expanded', 'false');
    html.classList.remove('overflow-hidden');

    const bars = menuToggle?.children;
    if (!bars) return;

    bars[0].classList.remove('rotate-45', 'translate-y-1.5');
    bars[1].classList.remove('opacity-0');
    bars[2].classList.remove('-rotate-45', '-translate-y-1.5');
    mobileMenu?.classList.add('-translate-y-full');
  }

  menuToggle?.addEventListener('click', () => {
    isMenuOpen ? closeMenu() : openMenu();
  });

  // Close menu when clicking a link (with small delay for tap feedback)
  menuLinks.forEach(link => {
    link.addEventListener('click', () => {
      setTimeout(() => {
        closeMenu();
      }, 150);
    });
  });

  // close on Escape key
  window.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && isMenuOpen) {
      closeMenu();
    }
  });
</script>
