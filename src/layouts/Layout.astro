---
import "../styles/global.css";

const symbols = [
  // Original symbols
//   "{}", "[]", "</>", "()", "++", "--", "?:",
  
  // Programming Operators
  "&&", "||", "!=", "===", "!==", "<=", ">=", "+=", "-=", "*=", "/=", "%=",
  
  // Programming Keywords
  "const", "let", "var", "if", "else", "for", "while", "try", "catch", 
  "async", "await", "return", "function", "class", "import", "export",
  
//   // Git/Version Control
//   "git", "commit", "push", "pull", "merge", "branch",
  
//   // Web Technologies
//   "HTML", "CSS", "JS", "React", "Node", "API", "JSON", "REST", "HTTP", "HTTPS",
];
const particles = symbols.map(sym => ({
  sym,
  x: `${Math.random() * 100}%`,
  y: `${Math.random() * 100}%`,
  delay: `-${Math.random() * 50}s`
}));

import Navbar from '../components/Navbar.astro';
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Naoya Fukada Portfolio</title>
	</head>
	<body>
		<div class="global-code-particles">
			{particles.map(p => (
				<span
				class="global-particle"
				style={`--x:${p.x};--y:${p.y};--delay:${p.delay}`}
				>
				{p.sym}
				</span>
			))}
		</div>
		<!-- Matrix Binary Rain -->
		<div class="matrix-rain">
			<div class="rain-column" style="--delay: 0s; --speed: 3s; left: 5%;"></div>
			<div class="rain-column" style="--delay: 0.5s; --speed: 4s; left: 15%;"></div>
			<div class="rain-column" style="--delay: 1s; --speed: 2.5s; left: 25%;"></div>
			<div class="rain-column" style="--delay: 1.5s; --speed: 3.5s; left: 35%;"></div>
			<div class="rain-column" style="--delay: 2s; --speed: 3s; left: 45%;"></div>
			<div class="rain-column" style="--delay: 2.5s; --speed: 4s; left: 55%;"></div>
			<div class="rain-column" style="--delay: 3s; --speed: 2.8s; left: 65%;"></div>
			<div class="rain-column" style="--delay: 3.5s; --speed: 3.2s; left: 75%;"></div>
			<div class="rain-column" style="--delay: 4s; --speed: 3.8s; left: 85%;"></div>
			<div class="rain-column" style="--delay: 4.5s; --speed: 3.3s; left: 95%;"></div>
		</div>
		<Navbar></Navbar>
		<slot />
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		padding: 0;
		width: 100%;
		height: 100%;
		box-sizing: border-box;
	}

	html {
		background: linear-gradient(135deg, #0c4a6e 0%, #1e293b 50%, #312e81 100%);
	}

	body {
		position: relative;
		overflow-x: hidden;
	}

	body::before {
		content: '';
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		z-index: -1;
		pointer-events: none;
	}
	

	.global-code-particles {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: 10;
	pointer-events: none;
	overflow: hidden;
	}
	.global-particle {
		position: absolute;
		font-family: 'Courier New', monospace;
		font-size: 1.5rem;
		color: rgba(56, 189, 248, 0.25);
		animation: globalParticleFloat 12s ease-in-out infinite;
		animation-delay: var(--delay);
		left: var(--x);
		top: var(--y);
	}
	
	@keyframes globalParticleFloat {
		0%, 100% { 
			transform: translateY(0) translateX(0) rotate(0deg); 
			opacity: 0.25; 
		}
		25% { 
			transform: translateY(-80px) translateX(20px) rotate(90deg); 
			opacity: 0.35; 
		}
		50% { 
			transform: translateY(-40px) translateX(-30px) rotate(180deg); 
			opacity: 0.45; 
		}
		75% { 
			transform: translateY(-100px) translateX(10px) rotate(270deg); 
			opacity: 0.30; 
		}
	}


	/* Matrix Binary Rain Effect */
	.matrix-rain {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		z-index: 1;
		pointer-events: none;
		overflow: hidden;
	}

	.rain-column {
		position: absolute;
		top: -100%;
		width: 2px;
		height: 100vh;
		background: linear-gradient(
			180deg,
			transparent 0%,
			rgba(16, 185, 129, 0.8) 20%,
			rgba(16, 185, 129, 0.6) 40%,
			rgba(16, 185, 129, 0.4) 60%,
			rgba(16, 185, 129, 0.2) 80%,
			transparent 100%
		);
		animation: matrixFall var(--speed) linear infinite var(--delay);
	}

	.rain-column::before {
		content: '01010110100101';
		position: absolute;
		top: 0;
		left: -10px;
		font-family: 'Courier New', monospace;
		font-size: 12px;
		color: rgba(16, 185, 129, 0.8);
		writing-mode: vertical-lr;
		letter-spacing: 2px;
		animation: binaryScroll var(--speed) linear infinite var(--delay);
	}

	@keyframes matrixFall {
		0% { transform: translateY(-100vh); }
		100% { transform: translateY(100vh); }
	}

	@keyframes binaryScroll {
		0% { opacity: 0; }
		10% { opacity: 1; }
		90% { opacity: 1; }
		100% { opacity: 0; }
	}
</style>
